{"ast":null,"code":"var _jsxFileName = \"G:\\\\HRM Management\\\\client\\\\src\\\\components\\\\body\\\\Csv.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useEffect, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport axios from 'axios';\nimport Message from \"../AlertMessage/Message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseStyle = {\n  flex: 1,\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifycontent: \"center\",\n  alignItems: \"center\",\n  padding: \"20px\",\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: \"#eeeeee\",\n  borderStyle: \"dashed\",\n  backgroundColor: \"#fafafa\",\n  color: \"#bdbdbd\",\n  outline: \"none\",\n  transition: \"border .24s ease-in-out\",\n  margin: \"30px\"\n};\nconst activeStyle = {\n  borderColor: \"#2196f3\"\n};\nconst acceptStyle = {\n  borderColor: \"#00e676\"\n};\nconst rejectStyle = {\n  borderColor: \"#ff1744\"\n};\n\nfunction Csv(props) {\n  _s();\n\n  const [files, setFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n    acceptedFiles\n  } = useDropzone({\n    accept: \".csv, text/csv, application/vnd.ms-excel, application/csv, text/x-csv, application/x-csv, text/comma-separated-values, text/x-comma-separated-values\",\n    noClick: true,\n    noKeyboard: true,\n    onDrop: acceptedFiles => {\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n    }\n  });\n  const style = useMemo(() => ({ ...baseStyle,\n    ...(isDragActive ? activeStyle : {}),\n    ...(isDragAccept ? acceptStyle : {}),\n    ...(isDragReject ? rejectStyle : {})\n  }), [isDragActive, isDragReject]);\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, []);\n  const filepath = acceptedFiles.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [file.path, \" - \", file.size, \" bytes\"]\n  }, file.path, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this));\n\n  const postData = async e => {\n    e.preventDefault();\n    setSelectedFile(acceptedFiles[0]);\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    console.log(selectedFile);\n\n    try {\n      const res = await axios.post('http://localhost:5000/upload', formData);\n      const {\n        fileName,\n        filePath\n      } = res.data;\n      console.log(fileName + ' : ' + filePath);\n      setMessage('Uploaded Successfully');\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage('There was a problem with the server');\n      } else {\n        setMessage(err.response.data.msg);\n      }\n    }\n  };\n\n  const onChangeHandle = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [message ? /*#__PURE__*/_jsxDEV(Message, {\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 27\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n        style\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop some files here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"(Only CSV File will be accepted)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"file\",\n          accept: \".xlsx, .xls, .csv\",\n          onChange: onChangeHandle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          marginLeft: \"20px\"\n        },\n        children: \"Updated File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filepath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3 d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        name: \"file\",\n        className: \"btn btn-primary\",\n        onClick: postData,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Csv, \"V7mAaZylKFoOZYsuCtQvSzVQu2I=\", false, function () {\n  return [useDropzone];\n});\n\n_c = Csv;\n\n/*#__PURE__*/\n_jsxDEV(Csv, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 140,\n  columnNumber: 1\n}, this);\n\nexport default Csv;\n\nvar _c;\n\n$RefreshReg$(_c, \"Csv\");","map":{"version":3,"sources":["G:/HRM Management/client/src/components/body/Csv.js"],"names":["React","useMemo","useEffect","useState","useDropzone","axios","Message","baseStyle","flex","display","flexDirection","justifycontent","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","margin","activeStyle","acceptStyle","rejectStyle","Csv","props","files","setFiles","selectedFile","setSelectedFile","message","setMessage","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","acceptedFiles","accept","noClick","noKeyboard","onDrop","map","file","Object","assign","preview","URL","createObjectURL","style","forEach","revokeObjectURL","filepath","path","size","postData","e","preventDefault","formData","FormData","append","console","log","res","post","fileName","filePath","data","err","response","status","msg","onChangeHandle","target","marginLeft"],"mappings":"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","sourcesContent":["\r\nimport React, { useMemo, useEffect, useState } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport axios from 'axios';\r\nimport Message from \"../AlertMessage/Message\";\r\nconst baseStyle = {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifycontent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: \"20px\",\r\n    borderWidth: 2,\r\n    borderRadius: 2,\r\n    borderColor: \"#eeeeee\",\r\n    borderStyle: \"dashed\",\r\n    backgroundColor: \"#fafafa\",\r\n    color: \"#bdbdbd\",\r\n    outline: \"none\",\r\n    transition: \"border .24s ease-in-out\",\r\n    margin: \"30px\"\r\n};\r\n\r\nconst activeStyle = {\r\n    borderColor: \"#2196f3\"\r\n};\r\n\r\nconst acceptStyle = {\r\n    borderColor: \"#00e676\"\r\n};\r\n\r\nconst rejectStyle = {\r\n    borderColor: \"#ff1744\"\r\n};\r\n\r\n\r\n\r\nfunction Csv(props) {\r\n    const [files, setFiles] = useState([]);\r\n    const [selectedFile, setSelectedFile] = useState(null)\r\n    const [message, setMessage] = useState(\"\")\r\n    const {\r\n        getRootProps,\r\n        getInputProps,\r\n        isDragActive,\r\n        isDragAccept,\r\n        isDragReject,\r\n        acceptedFiles,\r\n    } = useDropzone({\r\n        accept: \".csv, text/csv, application/vnd.ms-excel, application/csv, text/x-csv, application/x-csv, text/comma-separated-values, text/x-comma-separated-values\",\r\n        noClick: true,\r\n        noKeyboard: true,\r\n        onDrop: acceptedFiles => {\r\n            setFiles(\r\n                acceptedFiles.map(file =>\r\n                    Object.assign(file, {\r\n                        preview: URL.createObjectURL(file)\r\n                    })\r\n                )\r\n            );\r\n        }\r\n    });\r\n\r\n    const style = useMemo(\r\n        () => ({\r\n            ...baseStyle,\r\n            ...(isDragActive ? activeStyle : {}),\r\n            ...(isDragAccept ? acceptStyle : {}),\r\n            ...(isDragReject ? rejectStyle : {})\r\n        }),\r\n        [isDragActive, isDragReject]\r\n    );\r\n    useEffect(\r\n        () => () => {\r\n            // Make sure to revoke the data uris to avoid memory leaks\r\n            files.forEach(file => URL.revokeObjectURL(file.preview));\r\n        },\r\n        []\r\n    );\r\n\r\n    const filepath = acceptedFiles.map(file => (\r\n\r\n        <li key={file.path} >\r\n            {file.path} - {file.size} bytes\r\n        </li>\r\n    ));\r\n\r\n    const postData = async (e) => {\r\n        e.preventDefault();\r\n        setSelectedFile(acceptedFiles[0])\r\n        const formData = new FormData();\r\n        formData.append('file', selectedFile);\r\n        console.log(selectedFile);\r\n        try {\r\n            const res = await axios.post('http://localhost:5000/upload', formData);\r\n\r\n            const { fileName, filePath } = res.data;\r\n            console.log(fileName + ' : ' + filePath);\r\n            setMessage('Uploaded Successfully');\r\n        } catch (err) {\r\n            if (err.response.status === 500) {\r\n                setMessage('There was a problem with the server');\r\n            } else {\r\n                setMessage(err.response.data.msg);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n    const onChangeHandle = (e) => {\r\n        setSelectedFile(e.target.files[0])\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            {\r\n                message ? <Message message={message} /> : null\r\n            }\r\n            <div {...getRootProps({ style })}>\r\n                <input {...getInputProps()} />\r\n                <p>Drag 'n' drop some files here</p>\r\n                <em>(Only CSV File will be accepted)</em>\r\n                <div className=\"mt-3\">\r\n                    <input type=\"file\" name=\"file\" accept=\".xlsx, .xls, .csv\" onChange={onChangeHandle} />\r\n                </div>\r\n\r\n            </div>\r\n            <aside>\r\n                <h4 style={{ marginLeft: \"20px\" }}>Updated File</h4>\r\n                <ul>{filepath}</ul>\r\n            </aside>\r\n            <div className=\"mt-3 d-flex justify-content-center\">\r\n                <button type=\"button\" name='file' className=\"btn btn-primary\" onClick={postData}>\r\n                    Add\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n<Csv />\r\n\r\nexport default Csv"]},"metadata":{},"sourceType":"module"}
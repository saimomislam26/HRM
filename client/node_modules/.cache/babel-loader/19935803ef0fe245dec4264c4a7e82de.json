{"ast":null,"code":"var _jsxFileName = \"G:\\\\HRM Management\\\\client\\\\src\\\\components\\\\body\\\\Csv.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Csv(props) {\n  _s();\n\n  const {\n    acceptedFiles,\n    fileRejections,\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: '.csv, text/csv, application/vnd.ms-excel, application/csv, text/x-csv, application/x-csv, text/comma-separated-values, text/x-comma-separated-values'\n  });\n  const acceptedFileItems = acceptedFiles.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [file.path, \" - \", file.size, \" bytes\"]\n  }, file.path, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this));\n  const fileRejectionItems = fileRejections.map(({\n    file,\n    errors\n  }) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [file.path, \" - \", file.size, \" bytes\", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: errors.map(e => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: e.message\n      }, e.code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, file.path, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n        className: 'dropzone'\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop some files here, or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"(Only *.jpeg and *.png images will be accepted)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Accepted files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: acceptedFileItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Rejected files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: fileRejectionItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Csv, \"6ccwQsHL2ktgMpbjlTzYY8ed4Dg=\", false, function () {\n  return [useDropzone];\n});\n\n_c = Csv;\n\n/*#__PURE__*/\n_jsxDEV(Csv, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 48,\n  columnNumber: 1\n}, this);\n\nvar _c;\n\n$RefreshReg$(_c, \"Csv\");","map":{"version":3,"sources":["G:/HRM Management/client/src/components/body/Csv.js"],"names":["React","useDropzone","Csv","props","acceptedFiles","fileRejections","getRootProps","getInputProps","accept","acceptedFileItems","map","file","path","size","fileRejectionItems","errors","e","message","code","className"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,gBAA5B;;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAChB,QAAM;AACFC,IAAAA,aADE;AAEFC,IAAAA,cAFE;AAGFC,IAAAA,YAHE;AAIFC,IAAAA;AAJE,MAKFN,WAAW,CAAC;AACZO,IAAAA,MAAM,EAAE;AADI,GAAD,CALf;AASA,QAAMC,iBAAiB,GAAGL,aAAa,CAACM,GAAd,CAAkBC,IAAI,iBAC5C;AAAA,eACKA,IAAI,CAACC,IADV,SACmBD,IAAI,CAACE,IADxB;AAAA,KAASF,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA,UADsB,CAA1B;AAMA,QAAME,kBAAkB,GAAGT,cAAc,CAACK,GAAf,CAAmB,CAAC;AAAEC,IAAAA,IAAF;AAAQI,IAAAA;AAAR,GAAD,kBAC1C;AAAA,eACKJ,IAAI,CAACC,IADV,SACmBD,IAAI,CAACE,IADxB,yBAEI;AAAA,gBACKE,MAAM,CAACL,GAAP,CAAWM,CAAC,iBACT;AAAA,kBAAkBA,CAAC,CAACC;AAApB,SAASD,CAAC,CAACE,IAAX;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,KAASP,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA,UADuB,CAA3B;AAWA,sBACI;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA,4BACI,oBAASN,YAAY,CAAC;AAAEa,QAAAA,SAAS,EAAE;AAAb,OAAD,CAArB;AAAA,8BACI,sBAAWZ,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,kBAAKK;AAAL;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA1CQZ,G;UAMDD,W;;;KANCC,G;;AA4CT;AAAA,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import React from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n\r\nfunction Csv(props) {\r\n    const {\r\n        acceptedFiles,\r\n        fileRejections,\r\n        getRootProps,\r\n        getInputProps\r\n    } = useDropzone({\r\n        accept: '.csv, text/csv, application/vnd.ms-excel, application/csv, text/x-csv, application/x-csv, text/comma-separated-values, text/x-comma-separated-values'\r\n    });\r\n\r\n    const acceptedFileItems = acceptedFiles.map(file => (\r\n        <li key={file.path}>\r\n            {file.path} - {file.size} bytes\r\n        </li>\r\n    ));\r\n\r\n    const fileRejectionItems = fileRejections.map(({ file, errors }) => (\r\n        <li key={file.path}>\r\n            {file.path} - {file.size} bytes\r\n            <ul>\r\n                {errors.map(e => (\r\n                    <li key={e.code}>{e.message}</li>\r\n                ))}\r\n            </ul>\r\n        </li>\r\n    ));\r\n\r\n    return (\r\n        <section className=\"container\">\r\n            <div {...getRootProps({ className: 'dropzone' })}>\r\n                <input {...getInputProps()} />\r\n                <p>Drag 'n' drop some files here, or click to select files</p>\r\n                <em>(Only *.jpeg and *.png images will be accepted)</em>\r\n            </div>\r\n            <aside>\r\n                <h4>Accepted files</h4>\r\n                <ul>{acceptedFileItems}</ul>\r\n                <h4>Rejected files</h4>\r\n                <ul>{fileRejectionItems}</ul>\r\n            </aside>\r\n        </section>\r\n    );\r\n}\r\n\r\n<Csv />\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _ from 'lodash';\nexport const reducer = (state, action) => {\n  const pageSize = 5;\n\n  if (action.type === 'USER_MAIL') {\n    if (action.payload.event.target.checked) {\n      console.log(\"it is checked\");\n      state.user.push(action.payload.mail);\n      console.log(state.user);\n      return { ...state,\n        user: state.user\n      };\n    } else {\n      console.log(\"it is un---checked\");\n      let newUserMails = state.user.filter(function (mail) {\n        return mail !== action.payload.mail;\n      });\n      console.log(newUserMails);\n      return { ...state,\n        user: newUserMails\n      };\n    }\n  }\n\n  if (action.type === 'CHANGE_DATA') {\n    console.log(action.payload.target.files[0]);\n    state.files = action.payload.target.files[0];\n    let check = typeof state.files;\n    console.log(check);\n    console.log(state.files);\n    return { ...state,\n      files: state.files[0]\n    };\n  }\n\n  if (action.type === 'GET_DATA') {\n    state.pagePost.push(_(action.payload).slice(0).take(pageSize).value());\n    console.log(state.data, state.pagePost);\n    return { ...state,\n      data: action.payload,\n      pagePost: state.pagePost\n    };\n  }\n\n  if (action.type === 'INITIAL') {\n    state.pagePost.push(_(action.payload).slice(0).take(pageSize).value());\n    return { ...state,\n      pagePost: state.pagePost\n    };\n  } // if (action.type === 'PAGINATION') {\n  //     newPage = action.payload\n  //     console.log(newPage)\n  //     const startIndex = (newPage - 1) * pageSize\n  //     const currPost = _(data).slice(startIndex).take(pageSize).value()\n  //     state.pagePost.push(currPost)\n  // }\n\n\n  return { ...state\n  };\n};","map":{"version":3,"sources":["G:/HRM Management/client/src/components/reducer/reducer.js"],"names":["_","reducer","state","action","pageSize","type","payload","event","target","checked","console","log","user","push","mail","newUserMails","filter","files","check","pagePost","slice","take","value","data"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,QAAMC,QAAQ,GAAG,CAAjB;;AACA,MAAID,MAAM,CAACE,IAAP,KAAgB,WAApB,EAAiC;AAC7B,QAAIF,MAAM,CAACG,OAAP,CAAeC,KAAf,CAAqBC,MAArB,CAA4BC,OAAhC,EAAyC;AACrCC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAT,MAAAA,KAAK,CAACU,IAAN,CAAWC,IAAX,CAAgBV,MAAM,CAACG,OAAP,CAAeQ,IAA/B;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACU,IAAlB;AACA,aAAO,EAAE,GAAGV,KAAL;AAAYU,QAAAA,IAAI,EAAEV,KAAK,CAACU;AAAxB,OAAP;AACH,KALD,MAMK;AACDF,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,UAAII,YAAY,GAAGb,KAAK,CAACU,IAAN,CAAWI,MAAX,CAAkB,UAAUF,IAAV,EAAgB;AACjD,eAAQA,IAAI,KAAKX,MAAM,CAACG,OAAP,CAAeQ,IAAhC;AACH,OAFkB,CAAnB;AAGAJ,MAAAA,OAAO,CAACC,GAAR,CAAYI,YAAZ;AACA,aAAO,EAAE,GAAGb,KAAL;AAAYU,QAAAA,IAAI,EAAEG;AAAlB,OAAP;AACH;AACJ;;AAED,MAAIZ,MAAM,CAACE,IAAP,KAAgB,aAApB,EAAmC;AAC/BK,IAAAA,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACG,OAAP,CAAeE,MAAf,CAAsBS,KAAtB,CAA4B,CAA5B,CAAZ;AAEAf,IAAAA,KAAK,CAACe,KAAN,GAAcd,MAAM,CAACG,OAAP,CAAeE,MAAf,CAAsBS,KAAtB,CAA4B,CAA5B,CAAd;AACA,QAAIC,KAAK,GAAG,OAAQhB,KAAK,CAACe,KAA1B;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AAEAR,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACe,KAAlB;AACA,WAAO,EAAE,GAAGf,KAAL;AAAYe,MAAAA,KAAK,EAAEf,KAAK,CAACe,KAAN,CAAY,CAAZ;AAAnB,KAAP;AACH;;AAED,MAAId,MAAM,CAACE,IAAP,KAAgB,UAApB,EAAgC;AAC5BH,IAAAA,KAAK,CAACiB,QAAN,CAAeN,IAAf,CAAoBb,CAAC,CAACG,MAAM,CAACG,OAAR,CAAD,CAAkBc,KAAlB,CAAwB,CAAxB,EAA2BC,IAA3B,CAAgCjB,QAAhC,EAA0CkB,KAA1C,EAApB;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACqB,IAAlB,EAAwBrB,KAAK,CAACiB,QAA9B;AACA,WAAO,EAAE,GAAGjB,KAAL;AAAYqB,MAAAA,IAAI,EAAEpB,MAAM,CAACG,OAAzB;AAAkCa,MAAAA,QAAQ,EAAEjB,KAAK,CAACiB;AAAlD,KAAP;AACH;;AACD,MAAIhB,MAAM,CAACE,IAAP,KAAgB,SAApB,EAA+B;AAC3BH,IAAAA,KAAK,CAACiB,QAAN,CAAeN,IAAf,CAAoBb,CAAC,CAACG,MAAM,CAACG,OAAR,CAAD,CAAkBc,KAAlB,CAAwB,CAAxB,EAA2BC,IAA3B,CAAgCjB,QAAhC,EAA0CkB,KAA1C,EAApB;AACA,WAAO,EAAE,GAAGpB,KAAL;AAAYiB,MAAAA,QAAQ,EAAEjB,KAAK,CAACiB;AAA5B,KAAP;AACH,GAtCqC,CAuCtC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA,SAAO,EAAE,GAAGjB;AAAL,GAAP;AACH,CAlDM","sourcesContent":["import _ from 'lodash';\r\nexport const reducer = (state, action) => {\r\n    const pageSize = 5;\r\n    if (action.type === 'USER_MAIL') {\r\n        if (action.payload.event.target.checked) {\r\n            console.log(\"it is checked\")\r\n            state.user.push(action.payload.mail)\r\n            console.log(state.user)\r\n            return { ...state, user: state.user }\r\n        }\r\n        else {\r\n            console.log(\"it is un---checked\")\r\n            let newUserMails = state.user.filter(function (mail) {\r\n                return (mail !== action.payload.mail)\r\n            })\r\n            console.log(newUserMails)\r\n            return { ...state, user: newUserMails }\r\n        }\r\n    }\r\n\r\n    if (action.type === 'CHANGE_DATA') {\r\n        console.log(action.payload.target.files[0])\r\n\r\n        state.files = action.payload.target.files[0]\r\n        let check = typeof (state.files)\r\n        console.log(check)\r\n\r\n        console.log(state.files)\r\n        return { ...state, files: state.files[0] }\r\n    }\r\n\r\n    if (action.type === 'GET_DATA') {\r\n        state.pagePost.push(_(action.payload).slice(0).take(pageSize).value())\r\n        console.log(state.data, state.pagePost)\r\n        return { ...state, data: action.payload, pagePost: state.pagePost }\r\n    }\r\n    if (action.type === 'INITIAL') {\r\n        state.pagePost.push(_(action.payload).slice(0).take(pageSize).value())\r\n        return { ...state, pagePost: state.pagePost }\r\n    }\r\n    // if (action.type === 'PAGINATION') {\r\n    //     newPage = action.payload\r\n    //     console.log(newPage)\r\n    //     const startIndex = (newPage - 1) * pageSize\r\n    //     const currPost = _(data).slice(startIndex).take(pageSize).value()\r\n    //     state.pagePost.push(currPost)\r\n    // }\r\n\r\n\r\n\r\n    return { ...state };\r\n}"]},"metadata":{},"sourceType":"module"}
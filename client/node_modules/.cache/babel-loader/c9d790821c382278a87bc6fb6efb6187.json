{"ast":null,"code":"var _jsxFileName = \"G:\\\\HRM Management\\\\client\\\\src\\\\components\\\\body\\\\Contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Contact = () => {\n  _s();\n\n  const pageSize = 5;\n  const [data, setData] = useState([]);\n  const [pagePost, setpagePost] = useState([]);\n  const [currPage, setcurrPage] = useState(1);\n  const [mail, setMail] = useState({\n    subject: \"\",\n    text: \"\"\n  });\n  const [user, setuserMail] = useState([]);\n  let name, value;\n\n  const eventHandle = e => {\n    name = e.target.name;\n    value = e.target.value;\n    setMail({ ...mail,\n      [name]: value\n    });\n  };\n\n  const getData = async e => {\n    const res = await fetch('http://localhost:5000/show', {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const temp = await res.json();\n    setData(temp);\n    setpagePost(_(temp).slice(0).take(pageSize).value());\n\n    if (res.status === 400 || !data) {\n      window.alert(temp.message);\n      console.log(temp.message);\n    } else {\n      console.log(data);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  console.log(pagePost);\n  const count = Math.ceil(data.length / pageSize);\n  if (count === 1) return null;\n\n  const pageNo = _.range(1, count + 1);\n\n  const pagination = page => {\n    console.log(`${currPage} I am from Pagination`);\n    setcurrPage(page);\n    const startIndex = (page - 1) * pageSize;\n\n    const currPost = _(data).slice(startIndex).take(pageSize).value();\n\n    setpagePost(currPost);\n  };\n\n  const previous = () => {\n    setcurrPage(currPage - 1);\n    console.log(`${currPage} I am from Previous`);\n\n    if (currPage < count && currPage > 0) {\n      console.log(`${currPage} I am from Previous inside`);\n      const startIndex = (currPage - 2) * pageSize;\n\n      const currPost = _(data).slice(startIndex).take(pageSize).value();\n\n      setpagePost(currPost);\n    } else {\n      return pagePost;\n    }\n  };\n\n  const next = () => {\n    console.log(`${currPage} I am from next`);\n\n    if (currPage < count) {\n      const temp = currPage + 1;\n      setcurrPage(temp);\n      const startIndex = currPage * pageSize;\n\n      const currPost = _(data).slice(startIndex).take(pageSize).value();\n\n      setpagePost(currPost);\n      console.log(`${currPage} I am from next inside`);\n    } else {\n      return pagePost;\n    }\n  };\n\n  const getMail = mail => {\n    let users = usere.Contact(mail);\n    setuserMail(users);\n    console.log(user);\n  };\n\n  const sendMail = async e => {\n    e.preventDefault();\n    const {\n      subject,\n      text,\n      email\n    } = mail;\n    const res = await fetch('http://localhost:5000/sendmail', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        subject,\n        text\n      })\n    });\n    const temp = await res.json();\n    setData(temp);\n    setpagePost(_(temp).slice(0).take(pageSize).value());\n\n    if (res.status === 400 || !data) {\n      window.alert(temp.message);\n      console.log(temp.message);\n    } else {\n      console.log(data);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped mydatatable\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: pagePost.map((val, ind) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  onClick: () => getMail(val.email)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                scope: \"row\",\n                children: val.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.firstname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.lastname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 41\n              }, this)]\n            }, ind, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 37\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary mb-2\",\n        style: {\n          fontSize: \"13px\"\n        },\n        onClick: previous,\n        children: \"previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination mt-4\",\n        children: pageNo.map((val, ind) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: val === currPage ? \"page-item active\" : \"page-item\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"page-link\",\n              onClick: () => pagination(val),\n              children: val\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 37\n            }, this)\n          }, ind, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary mb-2\",\n        style: {\n          fontSize: \"13px\"\n        },\n        onClick: next,\n        children: \"next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"subject\",\n      value: mail.subject,\n      onChange: eventHandle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"text\",\n      value: mail.body,\n      onChange: eventHandle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary mb-2\",\n      onClick: sendMail,\n      children: \"send Mail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Contact, \"BHTNDS6QtvxRpbKPX/8W6VXCcnQ=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["G:/HRM Management/client/src/components/body/Contact.js"],"names":["React","useEffect","useState","_","Contact","pageSize","data","setData","pagePost","setpagePost","currPage","setcurrPage","mail","setMail","subject","text","user","setuserMail","name","value","eventHandle","e","target","getData","res","fetch","method","headers","temp","json","slice","take","status","window","alert","message","console","log","count","Math","ceil","length","pageNo","range","pagination","page","startIndex","currPost","previous","next","getMail","users","usere","sendMail","preventDefault","email","body","JSON","stringify","map","val","ind","id","firstname","lastname","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport _ from \"lodash\"\r\nconst Contact = () => {\r\n    const pageSize = 5;\r\n\r\n    const [data, setData] = useState([])\r\n    const [pagePost, setpagePost] = useState([])\r\n    const [currPage, setcurrPage] = useState(1)\r\n    const [mail, setMail] = useState({\r\n        subject: \"\", text: \"\"\r\n    })\r\n    const [user, setuserMail] = useState([])\r\n    let name, value\r\n    const eventHandle = (e) => {\r\n\r\n        name = e.target.name\r\n        value = e.target.value\r\n\r\n        setMail({ ...mail, [name]: value })\r\n\r\n    }\r\n    const getData = async (e) => {\r\n        const res = await fetch('http://localhost:5000/show', {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        })\r\n        const temp = await res.json();\r\n        setData(temp);\r\n        setpagePost(_(temp).slice(0).take(pageSize).value())\r\n        if (res.status === 400 || !data) {\r\n            window.alert(temp.message)\r\n            console.log(temp.message)\r\n        }\r\n        else {\r\n            console.log(data)\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        getData()\r\n    }, []);\r\n    console.log(pagePost)\r\n    const count = Math.ceil(data.length / pageSize)\r\n    if (count === 1) return null;\r\n    const pageNo = _.range(1, count + 1)\r\n\r\n    const pagination = (page) => {\r\n        console.log(`${currPage} I am from Pagination`)\r\n        setcurrPage(page);\r\n        const startIndex = (page - 1) * pageSize\r\n        const currPost = _(data).slice(startIndex).take(pageSize).value()\r\n        setpagePost(currPost)\r\n    }\r\n    const previous = () => {\r\n\r\n        setcurrPage(currPage - 1)\r\n        console.log(`${currPage} I am from Previous`)\r\n\r\n        if (currPage < count && currPage > 0) {\r\n\r\n            console.log(`${currPage} I am from Previous inside`)\r\n            const startIndex = (currPage - 2) * pageSize\r\n            const currPost = _(data).slice(startIndex).take(pageSize).value()\r\n            setpagePost(currPost)\r\n        }\r\n        else {\r\n            return pagePost\r\n        }\r\n    }\r\n    const next = () => {\r\n        console.log(`${currPage} I am from next`)\r\n        if (currPage < count) {\r\n            const temp = currPage + 1\r\n            setcurrPage(temp)\r\n            const startIndex = (currPage) * pageSize\r\n            const currPost = _(data).slice(startIndex).take(pageSize).value()\r\n            setpagePost(currPost)\r\n            console.log(`${currPage} I am from next inside`)\r\n        }\r\n        else {\r\n\r\n            return pagePost\r\n        }\r\n\r\n    }\r\n    const getMail = (mail) => {\r\n        let users = usere.Contact(mail)\r\n        setuserMail(users)\r\n        console.log(user)\r\n    }\r\n    const sendMail = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const { subject, text, email } = mail\r\n\r\n\r\n        const res = await fetch('http://localhost:5000/sendmail', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                email, subject, text\r\n            })\r\n        })\r\n        const temp = await res.json();\r\n        setData(temp);\r\n        setpagePost(_(temp).slice(0).take(pageSize).value())\r\n        if (res.status === 400 || !data) {\r\n            window.alert(temp.message)\r\n            console.log(temp.message)\r\n        }\r\n        else {\r\n            console.log(data)\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <table className=\"table table-striped mydatatable\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\"> </th>\r\n                        <th scope=\"col\">id</th>\r\n                        <th scope=\"col\">First Name</th>\r\n                        <th scope=\"col\">Last Name</th>\r\n                        <th scope=\"col\">Email</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                    {\r\n                        pagePost.map((val, ind) => {\r\n                            return (\r\n                                <>\r\n                                    <tr key={ind}>\r\n                                        <td><input type=\"checkbox\" onClick={() => getMail(val.email)} /></td>\r\n                                        <td scope=\"row\">{val.id}</td>\r\n                                        <td>{val.firstname}</td>\r\n                                        <td>{val.lastname}</td>\r\n                                        <td>{val.email}</td>\r\n                                    </tr>\r\n                                </>\r\n\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <nav className=\"d-flex justify-content-center align-items-center\">\r\n                <button type=\"button\" className=\"btn btn-primary mb-2\" style={{ fontSize: \"13px\" }} onClick={previous}>\r\n                    previous\r\n                </button>\r\n                <ul className=\"pagination mt-4\">\r\n                    {\r\n                        pageNo.map((val, ind) => {\r\n                            return (\r\n                                <li className={val === currPage ? \"page-item active\" : \"page-item\"} key={ind}>\r\n                                    <p className=\"page-link\" onClick={() => pagination(val)}>\r\n                                        {val}\r\n                                    </p>\r\n                                </li>\r\n                            )\r\n\r\n                        })\r\n                    }\r\n\r\n                </ul>\r\n                <button type=\"button\" className=\"btn btn-primary mb-2\" style={{ fontSize: \"13px\" }} onClick={next} >\r\n                    next\r\n                </button>\r\n            </nav>\r\n\r\n            <input type=\"text\" name=\"subject\" value={mail.subject} onChange={eventHandle} />\r\n            <input type=\"text\" name=\"text\" value={mail.body} onChange={eventHandle} />\r\n            <button type=\"button\" className=\"btn btn-primary mb-2\" onClick={sendMail} >\r\n                send Mail\r\n            </button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Contact\r\n"]},"metadata":{},"sourceType":"module"}